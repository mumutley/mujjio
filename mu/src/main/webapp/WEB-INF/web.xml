<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         id="Shindig"
         version="2.5">
    
    <display-name>mu</display-name>
    <!-- configuration -->
    <!-- If you have your own Guice module(s), put them here as a colon-separated list. -->
    <context-param>
        <param-name>guice-modules</param-name>
        <param-value>      
            me.moimoi.social.herql.config.PropertiesModule:
            org.apache.shindig.common.cache.ehcache.EhCacheModule:     
            org.apache.shindig.sample.container.SampleContainerGuiceModule:                        
            me.moimoi.social.herqlweb.shiro.ShiroModule:
            com.mujjio.web.mu.config.MuModule:
            me.moimoi.social.herql.config.HerqlGuiceModule:                        
            org.apache.shindig.sample.commoncontainer.auth.CommonContainerAuthGuiceModule
        </param-value>
    </context-param>
    <!--
    org.apache.shindig.gadgets.DefaultGuiceModule:            
    org.apache.shindig.gadgets.oauth.OAuthModule:
    org.apache.shindig.extras.ShindigExtrasGuiceModule:
    -->
    
    <!-- Shindig authentication filter -->  
    <filter>
        <filter-name>authFilter</filter-name>
        <filter-class>org.apache.shindig.auth.AuthenticationServletFilter</filter-class>
    </filter>
  
    <filter-mapping>
        <filter-name>authFilter</filter-name>
        <url-pattern>/social/*</url-pattern>
    </filter-mapping>
  
    <!-- GuiceServletContextListener -->
    <listener>
        <listener-class>org.apache.shindig.common.servlet.GuiceServletContextListener</listener-class>
    </listener>
  
    <!-- Serve REST api -->
    <servlet>
        <servlet-name>restapiServlet</servlet-name>
        <servlet-class>org.apache.shindig.protocol.DataServiceServlet</servlet-class>
        <init-param>
            <param-name>handlers</param-name>
            <param-value>org.apache.shindig.handlers</param-value>
        </init-param>
    </servlet>

    <!-- Serve RPC api -->
    <servlet>
        <servlet-name>jsonRpcServlet</servlet-name>
        <servlet-class>org.apache.shindig.protocol.JsonRpcServlet</servlet-class>
        <init-param>
            <param-name>handlers</param-name>
            <param-value>org.apache.shindig.handlers</param-value>
        </init-param>
    </servlet>
  
    <servlet-mapping>
        <servlet-name>restapiServlet</servlet-name>
        <url-pattern>/social/rest/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>jsonRpcServlet</servlet-name>
        <url-pattern>/social/rpc/*</url-pattern>
    </servlet-mapping>
    
    <resource-ref>
        <res-ref-name>jms/emailFactory</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
            <injection-target-class>me.moimoi.social.herql.integration.spi.MessangerServiceImpl</injection-target-class>
            <injection-target-name>factory</injection-target-name>
        </injection-target>        
    </resource-ref>

    <resource-env-ref>
        <resource-env-ref-name>jms/emailQueue</resource-env-ref-name>
        <resource-env-ref-type>javax.jms.Destination</resource-env-ref-type>
        <injection-target>
            <injection-target-class>me.moimoi.social.herql.integration.spi.MessangerServiceImpl</injection-target-class>
            <injection-target-name>queue</injection-target-name>
        </injection-target>    
    </resource-env-ref>
            
</web-app>